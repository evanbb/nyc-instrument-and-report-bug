function cov_1dlty42xae(){var path="/Users/bremeva/Documents/projects/nyc-instrument-and-report-bug/build/static/js/main.c1b512e1.chunk.js";var hash="63c0d486b2f13d71a589a155ad8f98905ec3404d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/bremeva/Documents/projects/nyc-instrument-and-report-bug/build/static/js/main.c1b512e1.chunk.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:1298}},"1":{start:{line:1,column:136},end:{line:1,column:182}},"2":{start:{line:1,column:200},end:{line:1,column:215}},"3":{start:{line:1,column:286},end:{line:1,column:293}},"4":{start:{line:1,column:299},end:{line:1,column:303}},"5":{start:{line:1,column:306},end:{line:1,column:312}},"6":{start:{line:1,column:315},end:{line:1,column:319}},"7":{start:{line:1,column:322},end:{line:1,column:328}},"8":{start:{line:1,column:332},end:{line:1,column:341}},"9":{start:{line:1,column:345},end:{line:1,column:351}},"10":{start:{line:1,column:355},end:{line:1,column:426}},"11":{start:{line:1,column:388},end:{line:1,column:423}},"12":{start:{line:1,column:434},end:{line:1,column:944}},"13":{start:{line:1,column:445},end:{line:1,column:943}},"14":{start:{line:1,column:945},end:{line:1,column:1119}},"15":{start:{line:1,column:1119},end:{line:1,column:1283}},"16":{start:{line:1,column:1266},end:{line:1,column:1280}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:1,column:120},end:{line:1,column:121}},loc:{start:{line:1,column:135},end:{line:1,column:183}},line:1},"1":{name:"(anonymous_1)",decl:{start:{line:1,column:184},end:{line:1,column:185}},loc:{start:{line:1,column:199},end:{line:1,column:216}},line:1},"2":{name:"(anonymous_2)",decl:{start:{line:1,column:221},end:{line:1,column:222}},loc:{start:{line:1,column:236},end:{line:1,column:238}},line:1},"3":{name:"(anonymous_3)",decl:{start:{line:1,column:239},end:{line:1,column:240}},loc:{start:{line:1,column:254},end:{line:1,column:256}},line:1},"4":{name:"(anonymous_4)",decl:{start:{line:1,column:257},end:{line:1,column:258}},loc:{start:{line:1,column:272},end:{line:1,column:1284}},line:1},"5":{name:"(anonymous_5)",decl:{start:{line:1,column:377},end:{line:1,column:378}},loc:{start:{line:1,column:387},end:{line:1,column:424}},line:1},"6":{name:"(anonymous_6)",decl:{start:{line:1,column:434},end:{line:1,column:435}},loc:{start:{line:1,column:444},end:{line:1,column:944}},line:1},"7":{name:"(anonymous_7)",decl:{start:{line:1,column:1254},end:{line:1,column:1255}},loc:{start:{line:1,column:1265},end:{line:1,column:1281}},line:1}},branchMap:{"0":{loc:{start:{line:1,column:51},end:{line:1,column:104}},type:"binary-expr",locations:[{start:{line:1,column:51},end:{line:1,column:100}},{start:{line:1,column:102},end:{line:1,column:104}}],line:1},"1":{loc:{start:{line:1,column:953},end:{line:1,column:1117}},type:"binary-expr",locations:[{start:{line:1,column:953},end:{line:1,column:991}},{start:{line:1,column:993},end:{line:1,column:1027}},{start:{line:1,column:1029},end:{line:1,column:1117}}],line:1},"2":{loc:{start:{line:1,column:1189},end:{line:1,column:1283}},type:"binary-expr",locations:[{start:{line:1,column:1189},end:{line:1,column:1216}},{start:{line:1,column:1218},end:{line:1,column:1283}}],line:1}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0]},inputSourceMap:{version:3,sources:["logo.svg","App.js","serviceWorker.js","index.js"],names:["module","exports","LazyComponent","lazy","App","className","src","logo","alt","fallback","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],mappings:"wIAAAA,EAAOC,QAAU,IAA0B,kC,wKCIrCC,G,MAAgBC,gBAAK,kBAAM,iCA0BlBC,MAxBf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,mCACO,4CADP,wBAGA,kBAAC,WAAD,CAAUC,SAAU,+BAClB,kBAACP,EAAD,OAEF,uBACEG,UAAU,WACVK,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,kBCLYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB",file:"static/js/main.c1b512e1.chunk.js",sourcesContent:["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Suspense, lazy } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst LazyComponent = lazy(() => import('./LazyComponent'))\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <Suspense fallback={<div />}>\n          <LazyComponent />\n        </Suspense>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],sourceRoot:""},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"63c0d486b2f13d71a589a155ad8f98905ec3404d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1dlty42xae=function(){return actualCoverage;};}return actualCoverage;}cov_1dlty42xae();cov_1dlty42xae().s[0]++;(this["webpackJsonpnyc-instrument-and-report-bug"]=(cov_1dlty42xae().b[0][0]++,this["webpackJsonpnyc-instrument-and-report-bug"])||(cov_1dlty42xae().b[0][1]++,[])).push([[0],[,,,function(e,n,t){cov_1dlty42xae().f[0]++;cov_1dlty42xae().s[1]++;e.exports=t.p+"static/media/logo.5d5d9eef.svg";},function(e,n,t){cov_1dlty42xae().f[1]++;cov_1dlty42xae().s[2]++;e.exports=t(11);},,,,,function(e,n,t){cov_1dlty42xae().f[2]++;},function(e,n,t){cov_1dlty42xae().f[3]++;},function(e,n,t){"use strict";cov_1dlty42xae().f[4]++;cov_1dlty42xae().s[3]++;t.r(n);var a=(cov_1dlty42xae().s[4]++,t(0)),r=(cov_1dlty42xae().s[5]++,t.n(a)),o=(cov_1dlty42xae().s[6]++,t(2)),l=(cov_1dlty42xae().s[7]++,t.n(o)),c=(cov_1dlty42xae().s[8]++,(t(9),t(3))),s=(cov_1dlty42xae().s[9]++,t.n(c)),i=(cov_1dlty42xae().s[10]++,(t(10),Object(a.lazy)(function(){cov_1dlty42xae().f[5]++;cov_1dlty42xae().s[11]++;return t.e(3).then(t.bind(null,12));})));cov_1dlty42xae().s[12]++;var u=function(){cov_1dlty42xae().f[6]++;cov_1dlty42xae().s[13]++;return r.a.createElement("div",{className:"App"},r.a.createElement("header",{className:"App-header"},r.a.createElement("img",{src:s.a,className:"App-logo",alt:"logo"}),r.a.createElement("p",null,"Edit ",r.a.createElement("code",null,"src/App.js")," and save to reload."),r.a.createElement(a.Suspense,{fallback:r.a.createElement("div",null)},r.a.createElement(i,null)),r.a.createElement("a",{className:"App-link",href:"https://reactjs.org",target:"_blank",rel:"noopener noreferrer"},"Learn React")));};cov_1dlty42xae().s[14]++;Boolean((cov_1dlty42xae().b[1][0]++,"localhost"===window.location.hostname)||(cov_1dlty42xae().b[1][1]++,"[::1]"===window.location.hostname)||(cov_1dlty42xae().b[1][2]++,window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)));cov_1dlty42xae().s[15]++;l.a.render(r.a.createElement(u,null),document.getElementById("root")),(cov_1dlty42xae().b[2][0]++,"serviceWorker"in navigator)&&(cov_1dlty42xae().b[2][1]++,navigator.serviceWorker.ready.then(function(e){cov_1dlty42xae().f[7]++;cov_1dlty42xae().s[16]++;e.unregister();}));}],[[4,1,2]]]);//# sourceMappingURL=main.c1b512e1.chunk.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,